#
# This script is used to read a packet trace from a pcap file,
# and generates packets in a busy loop.
#
# Requirements:
# (1) set CONFIG_RTE_LIBRTE_PMD_PCAP=y and recompile DPDK, see https://doc.dpdk.org/guides/nics/pcap_ring.html
# (2) increase Queue size in queue.cc and recompile BESS:
#

PCAPFILE = $PCAP!""
assert PCAPFILE
print("Target PCAP file: %s" %(PCAPFILE))

tag_offset = 72
pcap_file = '{}'.format(PCAPFILE)

pmd_port = PCAPReader(dev='{}'.format(pcap_file), offset=tag_offset, timestamp=True)
src = PortInc(port=pmd_port)
queue = Queue(size=pow(2,24))
queue.set_burst(burst=2)
replayer = Replayer(offset=tag_offset)

src -> queue -> replayer -> Sink()

bess.add_worker(wid=1, core=1)
bess.add_worker(wid=2, core=2)
bess.add_tc('rl',
            policy='rate_limit',
            resource='packet',
            limit={'packet': 1000000},
            wid=2)
src.attach_task(wid=1)
queue.attach_task(parent='rl')

bess.resume_all()
