#
# This script is used to read a packet trace from a pcap file,
# and generates packets in a busy loop.
#
# Requirements:
# (1) set CONFIG_RTE_LIBRTE_PMD_PCAP=y and recompile DPDK, see https://doc.dpdk.org/guides/nics/pcap_ring.html
# (2) increase Queue size in queue.cc and recompile BESS:
#

PCAPFILE = $PCAP!""
assert PCAPFILE
print("Target PCAP file: %s" %(PCAPFILE))

pcap_files = 'rx_pcap={},tx_pcap=/dev/null'.format(PCAPFILE)

try:
    pmd_port = PMDPort(vdev='eth_pcap0,{}'.format(pcap_files))
except:
    pmd_port = PMDPort(vdev='net_pcap0,{}'.format(pcap_files))

src = PortInc(port=pmd_port)
queue = Queue(size=pow(2,24))
replicate = Replicate(gates=[0, 1])

src -> queue -> replicate -> Sink()
replicate:1 -> queue
